{"ast":null,"code":"var _jsxFileName = \"/Users/noelani26/phase_4/module-4-practice-woof-woof/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport DogBar from './DogBar';\nimport DogContainer from './DogContainer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dogs: [],\n      clicked: {},\n      filter: false\n    };\n\n    this.changeTheName = dog => {\n      this.setState({\n        clicked: dog\n      });\n    };\n\n    this.handleChange = () => {\n      this.setState({\n        filter: !this.state.filter\n      });\n    };\n\n    this.filterDogs = () => {\n      if (this.state.filter === false) {\n        return this.state.dogs;\n      } else {\n        return this.state.dogs.filter(dog => dog.isGoodDog === true);\n      }\n    };\n\n    this.postDogs = clickedDog => {\n      fetch(\"http://localhost:3000/pups/\".concat(clickedDog.id), {\n        method: \"PATCH\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isGoodDog: !clickedDog.isGoodDog\n        })\n      }).then(response => response.json()).then(potato => {\n        this.setState(prevState => {\n          const newCopy = [...prevState.dogs];\n          newCopy.filter(dog => dog.id == potato.id)[0].isGoodDog = true;\n          return {\n            dogs: newCopy\n          };\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/pups').then(response => response.json()).then(dogs => this.setState({\n      dogs: dogs\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"filter-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"good-dog-filter\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Filter good dogs: \", this.state.filter ? 'ON' : 'OFF')), React.createElement(\"div\", {\n      id: \"dog-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(DogBar, {\n      dogs: this.filterDogs(),\n      changeTheName: this.changeTheName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"dog-summary-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"DOGGO:\"), React.createElement(\"div\", {\n      id: \"dog-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(DogContainer, {\n      clickedDog: this.state.clicked,\n      postDogs: this.postDogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/noelani26/phase_4/module-4-practice-woof-woof/src/App.js"],"names":["React","Component","DogBar","DogContainer","App","state","dogs","clicked","filter","changeTheName","dog","setState","handleChange","filterDogs","isGoodDog","postDogs","clickedDog","fetch","id","method","headers","body","JSON","stringify","then","response","json","potato","prevState","newCopy","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport './App.css';\nimport DogBar from './DogBar';\nimport DogContainer from './DogContainer';\n\nclass App extends Component {\n\n  state = {\n    dogs: [],\n    clicked: {}, \n    filter: false\n  }\n\n  componentDidMount () {\n    fetch('http://localhost:3000/pups').then(response => response.json()).then(dogs => this.setState({\n      dogs: dogs\n    }))\n  }\n\n  changeTheName = (dog) => {\n    this.setState({\n      clicked: dog\n    })\n    \n  }\n\n  handleChange = () => {\n      this.setState({\n        filter: !this.state.filter\n      })\n  }\n\n  filterDogs = () => {\n    if (this.state.filter === false) {\n      return this.state.dogs\n    } else {\n      return this.state.dogs.filter( dog => dog.isGoodDog === true)\n    }\n  }\n\n  postDogs = (clickedDog) => {\n    fetch(`http://localhost:3000/pups/${clickedDog.id}`, {\n      method: \"PATCH\", \n      headers: {'Content-Type' : 'application/json'},\n      body: JSON.stringify({\n        isGoodDog: !clickedDog.isGoodDog\n      })\n    }).then(response => response.json())\n    .then((potato) => {\n      this.setState( (prevState) => {\n        const newCopy = [...prevState.dogs]\n        newCopy.filter(dog => dog.id == potato.id)[0].isGoodDog = true\n        return {dogs: newCopy}\n      })\n    })\n  }\n\n  render () {\n      return (\n          <div className=\"App\">\n            <div id=\"filter-div\">\n              <button id=\"good-dog-filter\" onClick={this.handleChange}>Filter good dogs: {this.state.filter ? 'ON' : 'OFF'}</button>\n            </div>\n            <div id=\"dog-bar\">\n              <DogBar dogs={this.filterDogs()} changeTheName={this.changeTheName}/>\n            </div>\n            <div id=\"dog-summary-container\">\n              <h1>DOGGO:</h1>\n              <div id=\"dog-info\">\n                  <DogContainer clickedDog={this.state.clicked} postDogs={this.postDogs}/> \n              </div>\n            </div>\n          </div>\n      )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}